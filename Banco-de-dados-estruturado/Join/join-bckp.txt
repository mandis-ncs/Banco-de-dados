/*PRATIQUE 1*/

create database ExJoin;
use ExJoin;
  
create table Assinante(
cdAss int(30) primary key not null,
nAss int(30)
);

alter table Assinante add nome varchar(30);
select * from Assinante;

create table RamoAtiv(
cdRamo int(30) primary key not null,
dsRamo varchar(100),
cdAss int(30) not null,
foreign key (cdAss) references Assinante (cdAss) 
);


create table TipoAtiv(
cdAtiv int(30) primary key not null,
dsAtiv varchar(100),
cdAss int(30) not null,
foreign key (cdAss) references Assinante (cdAss) 
);

create table Endereco(
cdEnd int(30) primary key not null,
dsEnd varchar(100),
complemento varchar(30),
bairro varchar(30),
cep int(20),
cdAss int(30),
foreign key (cdAss) references Assinante (cdAss) 
);

create table Tel(
cdTel int(30) primary key not null,
ddd int(2),
nTel int(9),
cdEnd int(30),
foreign key (cdEnd) references Endereco (cdEnd) 
);

create table Municipio(
cdMuni int(30) primary key not null,
dsMun varchar(100),
cdEnd int(30),
foreign key (cdEnd) references Endereco (cdEnd) 
);

/*ADICIONANDO DADOS*/

insert into Assinante (cdAss, nAss, nome) values
(1,'10','Joao'),
(2,'20','Maria'),
(3,'30','Ana');

insert into RamoAtiv (cdRamo, dsRamo, cdAss) values
(11,'Secretario',2),
(12,'Auxiliar',3),
(13,'Administrativo',1);

insert into TipoAtiv (cdAtiv, dsAtiv, cdAss) values
(20,'premium',2),
(21,'prata',3),
(22,'premium',1);

insert into TipoAtiv (cdAtiv, dsAtiv, cdAss) values
(24,'comercial',1);

insert into Endereco (cdEnd, dsEnd, complemento, bairro, cep, cdAss) values
(30,'rua','casa','Paulista',11990000,1),
(31,'alameda','Paulista','Rio',11900000,2),
(32,'avenida','sobrado','cajati',11930000,3);

insert into Tel(cdTel,ddd,nTel,cdEnd) values
(40,11,912345678,30),
(41,12,87654321,31),
(42,13,12348765,32);

insert into Tel(cdTel,ddd,nTel,cdEnd) values
(48,13,45348768,32);

insert into Municipio(cdMuni,dsMun,cdEnd) values
(50,'Pelotas',30),
(51,'Natal',31),
(52,'Joao Camara',32);

/*CONSULTANDO*/

select * from Assinante;
/*1 Listar os nomes dos assinantes, seguido dos dados do endereço e os telefones correspondentes.
*/
/*SELECIONAR O NOME, TODOS DADOS DO ENDEREÇO E SÓ O NÚMERO DO TELEFONE - SELECIONAR TODOS OS DADOS DO LADO DIREITO ENDERECO QUE
TENHAM EM COMUM (ON) O cdAss, AI SELECIONAR O QUE TIVER DE COMUM INNER COM OS ATRIBS DO TELEFONE QUANDO EM COMUM O cdTel*/
select Assinante.nome, Endereco.*, Tel.ddd, Tel.nTel from Endereco right join Assinante on Endereco.cdAss = Assinante.cdAss 
inner join Tel on Endereco.cdEnd = Tel.cdEnd;


/*2 Listar os nomes dos assinantes, seguido do seu ramo, ordenados por ramo e posteriormente por nome.
*/
/*PARA MOSTRAR O RAMO DEPOIS O NOME É SÓ SELECT OS ATRIBUTOS DO RAMO PRIMEIRO*/
select RamoAtiv.*, Assinante.nome from RamoAtiv right join Assinante on Assinante.cdAss = RamoAtiv.cdAss order by RamoAtiv.dsRamo;


/*3 Listar os assinantes do municipio de Pelotas que são do tipo residencial.
*/
select Assinante.nome, Municipio.dsMun from Assinante inner join Endereco on Assinante.cdAss = Endereco.cdAss inner join Municipio
on Municipio.cdEnd = Endereco.cdEnd where Municipio.dsMun in ('Pelotas', 'Joao Camara');


/*4 Listar os nomes dos assinantes que possuem mais de um telefone.
*/
select Assinante.nome, Tel.nTel, count(Tel.nTel) from Assinante inner join Endereco on Assinante.cdAss = Endereco.cdAss inner join Tel on 
Endereco.cdEnd = Tel.cdEnd group by Assinante.nome having count(Tel.cdEnd)>1;


/*5 Listar os nomes dos assinantes seguido do número do telefone, tipo de assinante comercial, com endereço em Natal ou João Câmara.
*/
select Assinante.nome, Tel.ddd, Tel.nTel, TipoAtiv.dsAtiv, Municipio.dsMun from 
Assinante inner join Endereco on Assinante.cdAss = Endereco.cdAss 
inner join Tel on Endereco.cdENd = Tel.cdEnd
inner join TipoAtiv on Assinante.cdAss = TipoAtiv.cdAss
inner join Municipio on Endereco.cdEnd = Municipio.cdEnd where Municipio.dsMun in ('Natal', 'Joao Camara')
group by Assinante.nome; /*group by organiza por grupo, no caso por nome, evitando que a Ana apareça duplicada pois tem 2 telefones*/


/*PRATIQUE 2*/
create database Estacionamento;
use Estacionamento;

create table Cliente(
cpf int(15) primary key not null,
nome varchar(50),
dtNasc date
);

create table Modelo(
cdMod int(5) primary key not null,
Descr varchar(100)
);

create table Veiculo(
placa varchar(10) primary key not null,
cdMod int(5),
cpf int(15),
cor varchar(10),
foreign key(cdMod) references Modelo(cdMod),
foreign key(cpf) references Cliente(cpf)
);

create table Patio(
num int(20) primary key not null,
ender varchar(50),
capac int(4)
);

create table Estaciona(
cod int(20),
num int(20),
placa varchar(10),
dtEnt date,
datSai date,
hrEnt time,
hrSai time,
foreign key(num) references Patio(num),
foreign key(placa) references Veiculo(placa)
);

select * from estaciona;

insert into Cliente(cpf, nome, dtNasc) values
(123456789, 'Maria Ada', '2000/08/19'),
(987654321, 'Paulo Joao', '1988/05/18'),
(123498765, 'Lauro Luiz', '2001/08/11');

insert into Modelo (cdMod, Descr) values
(111, 'Ferrari'),
(222, 'Porsha'),
(333, 'Audi');

insert Veiculo(placa, cdMod, cpf, cor) values
('abc123', 111, 123456789, 'azul'),
('dfg456', 222, 987654321, 'rosa'),
('hij789', 333, 123498765, 'verde');

insert into Patio(num, ender, capac) values
(1212, 'Rua Paula - Sp', 200),
(1313, 'Av Lata - Rj', 50),
(1414, 'Av Pata - Sa', 120);

insert into Estaciona(cod, num, placa, dtEnt, datSai, hrEnt, hrSai) values
(1111111111, 1212, 'abc123', '2022/08/18', '2022/08/18', '14:00', '15:30'),
(22222222222, 1313, 'dfg456', '2022/10/28', '2022/10/28', '17:00', '19:30'),
(3333333333, 1414, 'hij789', '2022/03/15', '2022/03/15', '09:00', '17:30');

/*SELECIONANDO*/

/*Exiba a placa e o nome dos donos de todos os veículos.*/
select Cliente.nome, Modelo.Descr from Cliente inner join Veiculo on Cliente.cpf = Veiculo.cpf inner join
Modelo on Veiculo.cdMod = Modelo.cdMod;

/*Exiba o CPF e o nome do cliente que possui o veículo de placa “abc123”.*/
select Cliente.nome, Cliente.cpf from Cliente inner join Veiculo on Cliente.cpf = Veiculo.cpf where 
Veiculo.placa = 'abc123';

/*Exiba a placa e a cor do veículo que possui o código de estacionamento 1111111111.*/
select Veiculo.placa, Veiculo.cor from Veiculo inner join Estaciona on Veiculo.placa = Estaciona.placa
where Estaciona.cod = 1111111111;

/*Exiba a placa e o ano do veículo que possui o código de estacionamento 1111111111.*/
select Veiculo.placa from Veiculo inner join Estaciona on Veiculo.placa = Estaciona.placa
where Estaciona.cod = 1111111111;

/*Exiba a placa, o ano do veículo e a descrição de seu modelo, se ele possuir ano a partir de 2000.*/
select Veiculo.placa, Modelo.Descr from Veiculo inner join Modelo on Modelo.cdMod = Veiculo.cdMod;

/*Exiba o endereço, a data de entrada e de saída dos estacionamentos do veículo de placa “dfg456”.*/
select Patio.ender, Estaciona.dtEnt, Estaciona.datSai from Estaciona inner join Patio on Patio.num = Estaciona.num where Estaciona.placa = 'dfg456';

/*Exiba a quantidade de vezes que os veículos de cor verde estacionaram.*/
select Estaciona.placa, count(Estaciona.placa) as Vezes, Veiculo.cor from Estaciona inner join Veiculo on Estaciona.placa = Veiculo.placa where Veiculo.cor = 'verde';

/*Liste todos os clientes que possuem carro de modelo 111.*/
select Cliente.nome, Modelo.cdMod from Cliente inner join Veiculo on Cliente.cpf = Veiculo.cpf inner join
Modelo on Veiculo.cdMod = Modelo.cdMod where Modelo.cdMod=111;

/*Liste as placas, os horários de entrada e saída dos veículos de cor verde.*/
select Estaciona.placa, Estaciona.dtEnt, Estaciona.datSai, Veiculo.cor from Estaciona inner join Veiculo on Estaciona.placa = Veiculo.placa where Veiculo.cor = 'verde';

/*Liste todos os estacionamentos do veículo de placa “hij789”*/
select Estaciona.*, Veiculo.* from Estaciona inner join Veiculo on Estaciona.placa = Veiculo.placa where Estaciona.placa = 'hij789';

/*Exiba o nome do cliente que possui o veículo cujo código do estacionamento é 1111111111.*/
select Cliente.nome, Veiculo.placa, Estaciona.cod from Cliente inner join Veiculo on Cliente.cpf = Veiculo.cpf inner join Estaciona on Veiculo.placa = Estaciona.placa where Estaciona.cod = 1111111111;

/*Exiba o CPF do cliente que possui o veículo cujo código do estacionamento é 2147483647.*/
select Cliente.cpf, Estaciona.cod, Veiculo.placa from Cliente right join Veiculo on Cliente.cpf = Veiculo.cpf inner join Estaciona on Veiculo.placa = Estaciona.placa where Estaciona.cod = 2147483647;

/*Exiba a descrição do modelo do veículo cujo código do estacionamento é 1111111111.*/
select Veiculo.placa, Modelo.Descr, Estaciona.cod from Veiculo inner join Modelo on Modelo.cdMod = Veiculo.cdMod inner join Estaciona on Veiculo.placa = Estaciona.placa where Estaciona.cod = 1111111111;

/*Exiba a placa, o nome dos donos e a descrição dos os modelos de todos os veículos.*/
select Veiculo.placa, Cliente.nome, Modelo.Descr from Cliente inner join Veiculo on Cliente.cpf = Veiculo.cpf inner join Modelo on Modelo.cdMod = Veiculo.cdMod;


